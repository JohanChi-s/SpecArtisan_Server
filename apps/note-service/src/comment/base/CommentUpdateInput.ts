/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentUpdateManyWithoutCommentsInput } from "./CommentUpdateManyWithoutCommentsInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DocumentWhereUniqueInput } from "../../document/base/DocumentWhereUniqueInput";
import { CommentWhereUniqueInput } from "./CommentWhereUniqueInput";
import { PositionWhereUniqueInput } from "../../position/base/PositionWhereUniqueInput";
import { EnumCommentStatus } from "./EnumCommentStatus";

@InputType()
class CommentUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutCommentsInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutCommentsInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutCommentsInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutCommentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  content?: string;

  @ApiProperty({
    required: false,
    type: () => DocumentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DocumentWhereUniqueInput)
  @IsOptional()
  @Field(() => DocumentWhereUniqueInput, {
    nullable: true,
  })
  document?: DocumentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CommentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CommentWhereUniqueInput)
  @IsOptional()
  @Field(() => CommentWhereUniqueInput, {
    nullable: true,
  })
  parentCommentId?: CommentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PositionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PositionWhereUniqueInput)
  @IsOptional()
  @Field(() => PositionWhereUniqueInput, {
    nullable: true,
  })
  position?: PositionWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumCommentStatus,
  })
  @IsEnum(EnumCommentStatus)
  @IsOptional()
  @Field(() => EnumCommentStatus, {
    nullable: true,
  })
  status?: "Done" | "Todo" | "Doing" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userId?: string;
}

export { CommentUpdateInput as CommentUpdateInput };
